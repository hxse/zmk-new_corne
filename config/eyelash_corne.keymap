#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// #include "rgb_by_layer.h"  // 注释掉以禁用RGB层切换功能

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        brc: brc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
            label = "BRC";
        };

        bkt: bkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
            label = "BKT";
        };

        par: par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR";
        };

        ltgt: ltgt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp GT &kp LEFT>;
            label = "LTGT";
        };

        eqgt: eqgt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT &kp LEFT>;
            label = "EQGT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERT";
            bindings = <
&kp TAB   &kp Q  &kp W  &kp E      &kp R        &kp T                               &kp UP                &kp Y  &kp U        &kp I       &kp O    &kp P         &kp ESC
&kp BSPC  &kp A  &kp S  &kp D      &kp F        &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J        &kp K       &kp L    &kp LS(SEMI)  &kp SQT
&kp LALT  &kp Z  &kp X  &kp C      &kp V        &kp B        &kp SPACE              &kp DOWN              &kp N  &kp M        &kp COMMA   &kp DOT  &kp EQUAL     &kp LGUI
                        &kp LCTRL  &lt 2 SPACE  &lt 4 ENTER                                               &to 1  &lt 3 ENTER  &kp LSHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        game {
            display-name = "GAME";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T                               &kp UP                &kp Y  &kp U        &kp I       &kp O    &kp P         &kp ESC
&kp BSPC   &kp A  &kp S  &kp D      &kp F      &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J        &kp K       &kp L    &kp LS(SEMI)  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V      &kp B        &kp SPACE              &kp DOWN              &kp N  &kp M        &kp COMMA   &kp DOT  &kp EQUAL     &kp LGUI
                         &kp LCTRL  &kp SPACE  &lt 3 ENTER                                               &to 0  &lt 4 ENTER  &kp LSHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        control {
            bindings = <
&kp LA(TAB)     &kp LS(LA(F9))  &kp LC(LEFT)  &kp UP_ARROW    &kp LC(RIGHT)  &kp PAGE_UP                              &mmv MOVE_UP                     &trans       &kp LBRC         &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN  &trans
&kp DEL         &trans          &kp LEFT      &kp DOWN        &kp RIGHT      &kp LC(RBKT)             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_MUTE   &mkp LCLK        &mkp MCLK         &mkp RCLK             &kp SEMICOLON  &kp GRAVE
&kp LEFT_SHIFT  &kp LS(LC(Z))   &kp HOME      &kp LS(LA(F6))  &kp END        &kp PAGE_DOWN  &trans                    &mmv MOVE_DOWN                   &trans       &kp EXCLAMATION  &kp C_VOL_UP      &kp C_VOL_DN          &kp QUESTION   &trans
                                              &trans          &trans         &trans                                                                    &bootloader  &kp LS(ENTER)    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "CONTROL";
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&kp LA(TAB)  &kp PLUS      &kp MINUS       &kp ASTERISK  &kp PRCNT     &kp AMPS                               &mmv MOVE_UP                     &kp PIPE      &kp RIGHT_BRACE       &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp BSPC
&kp DEL      &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp N5                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6  &kp N7                &kp N8             &kp N9                 &kp N0            &kp DOUBLE_QUOTES
&kp LSHIFT   &kp AT_SIGN   &kp UNDERSCORE  &kp HASH      &kp TILDE     &kp CARET    &trans                    &mmv MOVE_DOWN                   &kp DOLLAR    &kp NON_US_BACKSLASH  &kp COMMA          &kp PERIOD             &kp SLASH         &trans
                                           &trans        &trans        &bootloader                                                             &trans        &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn {
            display-name = "FN";
            bindings = <
&kp LA(TAB)     &kp F11  &kp F12  &kp LS(LA(F3))  &kp LS(LA(F4))  &kp LS(LA(F5))                                &mmv MOVE_UP                     &trans  &brc                  &bkt    &par    &ltgt   &trans
&kp LS(LA(F7))  &kp F1   &kp F2   &kp F3          &kp F4          &kp F5                        &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp LS(LA(NUMBER_1))  &trans  &trans  &eqgt   &trans
&kp LA(LS(F8))  &kp F6   &kp F7   &kp F8          &kp F9          &kp F10         &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &trans                &trans  &trans  &trans  &trans
                                  &trans          &trans          &trans                                                                         &to 6   &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        bt {
            display-name = "BT&RGB";
            bindings = <
&bt BT_NXT      &trans         &trans         &trans         &trans         &trans                                   &mmv MOVE_UP                     &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&bt BT_CLR      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans  &trans
&bt BT_CLR_ALL  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans                    &mmv MOVE_DOWN                   &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                              &trans         &trans         &trans                                                                    &to 0            &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
